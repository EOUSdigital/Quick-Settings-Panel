//TODO üìö Module 4 - Lesson 09.02: Immediately Invoked Function Expressions (IIFE) - Challenge


//TODO  üß± ‚ÄúQuick Settings Panel‚Äù Using IIFE

//* ‚úÖ Step 1: Define the Purpose of the App

//? Question
//  > ‚ÄúWhat should this mini app do when the page loads?‚Äù

//? Project version:
//  ‚Ä¢ Show a dropdown or buttons to choose a theme ("light" or "dark")
//  ‚Ä¢ Log a message or update an area of the page with the selected theme
//  ‚Ä¢ Keep the theme private inside an IIFE
//  ‚Ä¢ Allow external code to use only a method like applyTheme() or getTheme()

//* ‚úÖ Step 2: Design the HTML Structure (in mind or on paper)
//  ‚Ä¢ Input element (e.g. <select> with "Light" and "Dark")
//  ‚Ä¢ A heading or container whose style will reflect the selected theme
//  ‚Ä¢ A script at the bottom where the JavaScript will run
//  Test logic and visibility.

//* ‚úÖ Step 3: Use an IIFE to Isolate the Settings Logic
//  Inside script:
//  ‚Ä¢ Wrap the entire theme-handling logic inside an IIFE
//  ‚Ä¢ Declare a private variable like let currentTheme = "light"
//  ‚Ä¢ Create a public object with one or two functions like:
//      > applyTheme(newTheme) ‚Äì updates currentTheme and DOM
//      > getTheme() ‚Äì returns the current theme
//  Return this object at the end of IIFE, and store it in something like const settingsPanel = (...)

//* ‚úÖ Step 4: Link the Input to the IIFE Logic
//  ‚Ä¢ Add an event listener to the dropdown or buttons
//  ‚Ä¢ When the user changes the theme, call settingsPanel.applyTheme(value)
//  The applyTheme() method should:
//      > Update the private variable
//      > Change the text or background color in the DOM
//      > Log something like: "Theme changed to: dark"

//* ‚úÖ Step 5: Test Scope Protection
//  After the IIFE:
//  ‚Ä¢ log currentTheme ‚Äî it should fail (it‚Äôs private)
//  ‚Ä¢ Only settingsPanel.getTheme() should reveal the current value


//! Solution

(() => {
    
    function toggleTheme() {
        const currentTheme = document.documentElement.dataset.theme;
        document.documentElement.dataset.theme = currentTheme === 'dark' ? 'light' : 'dark';
    }

    const themeToggleButton = document.querySelector('[data-theme-toggle]');
    themeToggleButton.addEventListener('click', toggleTheme);
})();















